import{_ as a,o as e,c as t,R as n}from"./chunks/framework.-3ULgdun.js";const f=JSON.parse('{"title":"Panuon.WPF.UI 手册","description":"","frontmatter":{},"headers":[],"relativePath":"wpf-ui/zh-cn/index.md","filePath":"wpf-ui/zh-cn/index.md"}'),o={name:"wpf-ui/zh-cn/index.md"},r=n('<h1 id="panuon-wpf-ui-手册" tabindex="-1">Panuon.WPF.UI 手册 <a class="header-anchor" href="#panuon-wpf-ui-手册" aria-label="Permalink to &quot;Panuon.WPF.UI 手册&quot;">​</a></h1><h2 id="说明" tabindex="-1">说明 <a class="header-anchor" href="#说明" aria-label="Permalink to &quot;说明&quot;">​</a></h2><p><a href="./contract.html">约定</a></p><h2 id="原生控件" tabindex="-1">原生控件 <a class="header-anchor" href="#原生控件" aria-label="Permalink to &quot;原生控件&quot;">​</a></h2><p><a href="./button.html">Button 按钮</a></p><h2 id="自定义控件" tabindex="-1">自定义控件 <a class="header-anchor" href="#自定义控件" aria-label="Permalink to &quot;自定义控件&quot;">​</a></h2><h2 id="辅助控件" tabindex="-1">辅助控件 <a class="header-anchor" href="#辅助控件" aria-label="Permalink to &quot;辅助控件&quot;">​</a></h2><h2 id="可用于附加的类型" tabindex="-1">可用于附加的类型 <a class="header-anchor" href="#可用于附加的类型" aria-label="Permalink to &quot;可用于附加的类型&quot;">​</a></h2>',8),i=[r];function h(c,d,l,s,u,_){return e(),t("div",null,i)}const m=a(o,[["render",h]]);export{f as __pageData,m as default};
